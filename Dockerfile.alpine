
ARG BASE_IMAGE=alpine:3.14

# based on debian
FROM ${BASE_IMAGE} AS vcpkg

RUN apk add --no-cache cmake make ninja gcc g++ musl-dev zip pkgconf git curl tar

COPY checked_download.sh /opt/

# Find new versions here: https://github.com/ninja-build/ninja/releases
ARG NINJA_VERSION_TAG=v1.10.2
ARG NINJA_URI=https://github.com/ninja-build/ninja/archive/refs/tags/${NINJA_VERSION_TAG}.tar.gz
ARG NINJA_SHA256=ce35865411f0490368a8fc383f29071de6690cbadc27704734978221f25e2bed

# Find new versions here: https://github.com/microsoft/vcpkg/releases
ARG VCPKG_VERSION_TAG=2021.05.12
ARG VCPKG_URI=https://github.com/microsoft/vcpkg/archive/refs/tags/${VCPKG_VERSION_TAG}.tar.gz
ARG VCPKG_SHA256=907f26a5357c30e255fda9427f1388a39804f607a11fa4c083cc740cb268f5dc

ENV VCPKG_ROOT=/opt/vcpkg
ENV NINJA_ROOT=/opt/ninja
ENV PATH=${NINJA_ROOT}:${VCPKG_ROOT}:${PATH}
ENV VCPKG_FORCE_SYSTEM_BINARIES=1

RUN cd /opt && \
    chmod u+x /opt/checked_download.sh && \
# Download and build ninja
    ./checked_download.sh ${NINJA_SHA256} ${NINJA_URI} && mv ninja* ninja-source && \
    cmake -H/opt/ninja-source -B/opt/ninja-source/build && \
    cmake --build /opt/ninja-source/build && \
    mkdir ${NINJA_ROOT} && mv /opt/ninja-source/build/ninja ${NINJA_ROOT} && \
# Download and build vcpkg
    ./checked_download.sh ${VCPKG_SHA256} ${VCPKG_URI} && mv vcpkg* vcpkg && \
    /opt/vcpkg/bootstrap-vcpkg.sh -disableMetrics -useSystemBinaries && \
# Clean up
    rm -Rf /opt/ninja-source && \
    rm checked_download.sh

COPY vcpkg-triplets/x64-linux-musl.cmake ${VCPKG_ROOT}/triplets/

FROM vcpkg as testing

WORKDIR /workspace

# copy test code
COPY testproject ./

# generate tests
RUN cmake -DCMAKE_TOOLCHAIN_FILE:STRING=${VCPKG_ROOT}/scripts/buildsystems/vcpkg.cmake \
    -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=TRUE -DCMAKE_BUILD_TYPE:STRING=Debug \
    -H/workspace -B/workspace/build -G Ninja
# build & run tests
RUN cmake --build /workspace/build --config Debug --target all -j 6 -- && \
    cd /workspace/build && ctest

FROM vcpkg as final

